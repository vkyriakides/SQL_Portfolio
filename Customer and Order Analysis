/* CREATED BY VALERIA KYRIAKIDES
CREATE DATE: 10/04/2023
Analyze customer and sales data to gain insights by querying a database with multiple tables in it and quantifying statistics.
*/

SELECT
    *
FROM
    BIT_DB.customers;
    
SELECT
    *
FROM
    BIT_DB.JanSales
LIMIT
    20;
-- fix incorrect order id data using LENGTH
SELECT
    *
FROM
    BIT_DB.customers
WHERE
    LENGTH(order_id)=6;
    
SELECT
    *
FROM
    BIT_DB.JanSales
WHERE
    LENGTH(orderid) = 6;
    
-- How many orders were placed in january?
SELECT
    COUNT(*)
FROM
    BIT_DB.JanSales
WHERE
    LENGTH(orderid)=6;
    
-- how many of those orders were for an iPhone?
SELECT
    COUNT(*)
FROM
    BIT_DB.JanSales
WHERE LENGTH(orderid)=6 AND Product = 'iPhone';


-- select the customer account numbers for all the orders that were placed in February.

-- getting an overview of what data looks like in each table:
select * from bit_db.FebSales;
select * from bit_db.customers;

SELECT
    c.acctnum
FROM
    BIT_DB.customers c
INNER JOIN
    BIT_DB.FebSales fs
ON 
    fs.orderid = c.order_id
WHERE
    LENGTH(orderid)=6;    


-- which product was the cheapest one sold in January, and what was the price?

-- overview of what data in JanSales table looks like:    
select * from bit_db.JanSales where length(orderid)=6;

SELECT
    distinct product,
    price
FROM
    BIT_DB.JanSales
WHERE
     price IN 
     (
     SELECT
         MIN(price)
     FROM
         BIT_DB.JanSales
     );   

-- What is the total revenue of each product sold in January?
SELECT
    product,
    price*SUM(quantity) AS Revenue
FROM
    BIT_DB.JanSales
WHERE
    LENGTH(orderid)=6
GROUP BY
    product;
    

-- Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?    
SELECT
    Product,
    location,
    sum(quantity),
    sum(quantity)*price as revenue
FROM
    BIT_DB.FebSales
WHERE
    location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY
    product;
    

-- How many customers ordered more than 2 products at a time, and what was the average amount spend for all those customers?    
SELECT
    count(c.acctnum),
    AVG(fs.quantity*fs.price) AS avg_spent
FROM
    BIT_DB.customers c
RIGHT JOIN
    BIT_DB.FebSales fs
ON     
    c.order_id = fs.orderid
WHERE
    fs.quantity > 2 AND LENGTH(fs.orderid)=6;


-- List all the products sold in Los Angeles in February, and include how many of each were sold
SELECT
    product,
    sum(quantity)
FROM
    BIT_DB.FebSales
WHERE
    location LIKE '%Los Angeles%'
GROUP BY
    product;


-- Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT
    location,
    COUNT(orderID)
FROM
    BIT_DB.JanSales
WHERE
    location LIKE '%NY%' 
    AND length(orderID) = 6
GROUP BY     
    location
HAVING 
    COUNT(orderID)>=3;
    

-- How many of each type of headphone were sold in February?
SELECT    
    product,
    SUM(quantity)
FROM
    BIT_DB.FebSales
WHERE
    product LIKE '%Headphone%' AND LENGTH(orderid)=6
GROUP BY    
    product;
    

-- What was the average quantity of products purchased per account in February?
SELECT
   AVG(fs.quantity*fs.price)
FROM    
    BIT_DB.FebSales fs
OUTER JOIN
    BIT_DB.customers c
ON 
    fs.orderid = c.order_id
WHERE
    length(fs.orderid)=6;
    

-- What was the average quantity of products purchased per account in february?
SELECT
    SUM(fs.quantity)/COUNT(c.acctnum)
FROM
    BIT_DB.FebSales fs
LEFT JOIN
    BIT_DB.customers c
ON     
    fs.orderid = c.order_id
WHERE
    length(fs.orderid)=6;
    

-- Which product brought the most revenue in January and how much revenue did it bring in total?
SELECT
    product,
    SUM(quantity*price)
FROM    
    BIT_DB.JanSales
GROUP BY
    product
ORDER BY
    SUM(quantity*price) DESC
LIMIT 1;
    
